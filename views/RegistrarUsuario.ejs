<title>Registro de Usuario</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .transparent-background {
      background-color: rgba(255, 255, 255, 0.5);
      /* Aquí puedes ajustar el valor de la transparencia */
    }
    input[type="date"]::-webkit-calendar-picker-indicator {
      filter: invert(1);}
  </style>
<%-include('../views/layouts/LayoutIn.ejs')%>
<script>
     window.addEventListener('DOMContentLoaded', (event) => {
      // Obtener el elemento del campo de teléfono
      const phoneInput = document.getElementById('phone');

      // Función para validar el número de teléfono
      const validatePhone = (event) => {
        const inputValue = event.target.value;
        const onlyNumbers = /^\d+$/;
        
        if (!onlyNumbers.test(inputValue)) {
          // Si el valor ingresado no es un número, eliminar el último carácter
          event.target.value = inputValue.slice(0, -1);
        }
      };

      // Asignar el evento de entrada para validar el teléfono
      phoneInput.addEventListener('input', validatePhone);
    });
     window.addEventListener('DOMContentLoaded', (event) => {
      // Obtener el elemento de input
      const fechaNacimientoInput = document.getElementById('fechaNacimiento');

      // Establecer la validación en el evento 'input'
      fechaNacimientoInput.addEventListener('input', validarFechaNacimiento);

      // Función de validación para la fecha de nacimiento
      function validarFechaNacimiento() {
        const fechaNacimiento = new Date(fechaNacimientoInput.value);
        const hoy = new Date();
        const edadMinima = 18;

        // Calcular la diferencia de años
        const diferenciaAnios = hoy.getFullYear() - fechaNacimiento.getFullYear();

        // Establecer la fecha mínima válida
        const fechaMinima = new Date();
        fechaMinima.setFullYear(fechaMinima.getFullYear() - edadMinima);

        if (fechaNacimiento > fechaMinima) {
          fechaNacimientoInput.setCustomValidity('Debe ser mayor de 18 años');
        } else {
          fechaNacimientoInput.setCustomValidity('');
        }
    }
    });
    window.addEventListener('DOMContentLoaded', (event) => {
         // Obtener el elemento de input
      const fechaNacimientoInput = document.getElementById('fechaNacimiento');

      // Establecer la validación en el evento 'input'
      fechaNacimientoInput.addEventListener('input', validarFechaNacimiento);

      // Función de validación para la fecha de nacimiento
      function validarFechaNacimiento() {
        const fechaNacimiento = new Date(fechaNacimientoInput.value);
        const hoy = new Date();
        const edadMinima = 18;

        // Calcular la diferencia de años
        const diferenciaAnios = hoy.getFullYear() - fechaNacimiento.getFullYear();

        // Establecer la fecha mínima válida
        const fechaMinima = new Date();
        fechaMinima.setFullYear(fechaMinima.getFullYear() - edadMinima);

        if (fechaNacimiento > fechaMinima) {
          fechaNacimientoInput.setCustomValidity('Debe ser mayor de 18 años');
        } else {
          fechaNacimientoInput.setCustomValidity('');
        }
      }
      // Obtener los elementos de input
      const nombresInput = document.getElementById('nombres');
      const apellidosInput = document.getElementById('apellidos');

      // Establecer la validación en el evento 'input'
      nombresInput.addEventListener('input', validarNombres);
      apellidosInput.addEventListener('input', validarApellidos);

      // Función de validación para el campo 'Nombres'
      function validarNombres() {
        const valor = nombresInput.value.trim();
        const patron = /^[a-zA-Z\s]*$/; // Expresión regular para permitir solo letras y espacios
        if (!patron.test(valor)) {
          nombresInput.setCustomValidity('Ingrese solo letras');
        } else if (valor.length > 50) {
          nombresInput.setCustomValidity('Ingrese un máximo de 50 caracteres');
        } else {
          nombresInput.setCustomValidity('');
        }
      }

      // Función de validación para el campo 'Apellidos'
      function validarApellidos() {
        const valor = apellidosInput.value.trim();
        const patron = /^[a-zA-Z\s]*$/; // Expresión regular para permitir solo letras y espacios
        if (!patron.test(valor)) {
          apellidosInput.setCustomValidity('Ingrese solo letras');
        } else if (valor.length > 50) {
          apellidosInput.setCustomValidity('Ingrese un máximo de 50 caracteres');
        } else {
          apellidosInput.setCustomValidity('');
        }
      }
    });
  
</script>
<div class="content">
    <h2>Registro de Empleados</h2>
    <form action="/registro" method="post" enctype="multipart/form-data">
      <div class="form-row">
    <div class="form-group col-md-6">
      <h5 for="nombres">Nombres:</h5>
      <input type="text" maxlength="50" class="form-control" id="nombres" name="nombres" placeholder="Ingrese el o los nombres" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="apellidos">Apellidos:</h5>
      <input type="text" maxlength="50" class="form-control" id="apellidos" name="apellidos" placeholder="Ingrese el o los apellidos" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="username">Username:</h5>
      <input type="text" maxlength="32" class="form-control" id="username" name="username" placeholder="Ingrese el nombre de usuario" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="ci">CI:</h5>
      <input type="text" maxlength="10" class="form-control" id="ci" name="ci" placeholder="Ingrese el Nº de documento" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="direccion">Dirección:</h5>
      <input type="text" maxlength="50" class="form-control" id="direccion" name="direccion" placeholder="Ingrese la dirección del usuario" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="rol">Rol:</h5>
      <select class="form-control" id="rol" required>
        <option value="" style="color: black;">Seleccione un rol</option>
        <option value="Abogado" style="color: black;">Abogado</option>
        <option value="Secretaria" style="color: black;">Secretaria</option>
      </select>
    </div>
    <div class="form-group col-md-6">
      <h5 for="fechanac">Fecha de Nacimiento:</h5>
      <input type="date" class="form-control" id="fechaNacimiento" name="fechanac" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="phone">Teléfono:</h5>
      <input type="text" class="form-control"  maxlength="10" id="phone" name="phone" placeholder="Ingrese el número de teléfono del usuario" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="email">Email:</h5>
      <input type="email" maxlength="50" class="form-control" id="email" name="email" placeholder="Ingrese el email del usuario" required>
    </div>
    <div class="form-group col-md-6">
      <h5 for="password">Contraseña:</h5>
      <input type="password" maxlength="50" class="form-control" id="password" name="password" placeholder="Ingrese una contraseña para el usuario" required>
    </div>
    
    <button type="submit" class="btn btn-primary">Registrar</button>
  </form>
    
  </div>
</div>
<script>
  // Obtener el elemento del campo de fecha de nacimiento
  const fechanacInput = document.getElementById('fechanac');
  // Obtener el elemento del botón de registro
  const registerButton = document.getElementById('registerButton');

  // Escuchar el evento 'input' en el campo de fecha de nacimiento
  fechanacInput.addEventListener('input', function() {
    // Obtener la fecha de nacimiento seleccionada
    const selectedDate = new Date(fechanacInput.value);
    // Obtener la fecha actual
    const currentDate = new Date();
    // Calcular la diferencia de tiempo en milisegundos
    const timeDiff = currentDate.getTime() - selectedDate.getTime();
    // Calcular la edad en años
    const age = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 365));

    // Habilitar o deshabilitar el botón de registro según la edad
    if (age >= 18) {
      registerButton.disabled = false;
    } else {
      registerButton.disabled = true;
    }
  });
</script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  
